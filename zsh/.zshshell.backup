# tm - create new tmux session, or switch to existing one. Works from within tmux too. (@bag-man)
# `tm` will allow you to select your tmux session via fzf.
# `tm irc` will attach to the irc session (if it exists), else it will create it.
ftm() {
  [[ -n "$TMUX" ]] && change="switch-client" || change="attach-session"
  if [ $1 ]; then
    tmux $change -t "$1" 2>/dev/null || (tmux new-session -d -s $1 && tmux $change -t "$1"); return
  fi
  session=$(tmux list-sessions -F "#{session_name}" 2>/dev/null | fzf --exit-0) &&  tmux $change -t "$session" || echo "No sessions found."
}


# fs [FUZZY PATTERN] - Select selected tmux session
#   - Bypass fuzzy finder if there's only one match (--select-1)
#   - Exit if there's no match (--exit-0)
fs() {
  local session
  session=$(tmux list-sessions -F "#{session_name}" | \
    fzf --query="$1" --select-1 --exit-0) &&
  tmux switch-client -t "$session"
}

# Customer shell
# vg - vim and rg
vg() {
  local file
  file="$(rg --no-block-buffered --color=always --no-heading $@ | fzf 1 -1 | awk -F: '{print $1}')"
  if [[ -n $file ]]; then
      ${EDITOR:-nvim} "$file"
  fi
}

#fkll - kill process
fkill() {
  local pid
  pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')

  if [ "x$pid" != "x" ]
  then
    echo $pid | xargs kill -${1:-9}
  fi
}

# fdim - docker rm image use fzf
fdim() {
  local id
  id=$(docker image ls |fzf -m | awk {'print$3'})
  docker image rm -f $id
}

# myip - show my ip
myip() {
    local_ip=$(ifconfig en0 |grep "inet\ " | awk {'print $2'})
    inter_ip=$(curl -s https://api.ipify.org)
    echo $fg[red]"Local:" $fg[white] $local_ip
    echo $fg[red]"Inter:" $fg[white] $inter_ip
}
